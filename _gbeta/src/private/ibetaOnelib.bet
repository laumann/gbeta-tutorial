(* FILE "./private/ibetaOnelib.bet"
 *
 * Copyright (C) 1997-2011 Erik Ernst
 *
 * This file is part of "gbeta" -- a generalized version of the
 * programming language BETA.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is destributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Among other things, the copyright notice and this notice must be
 * preserved on all copies.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, probably in a file named COPYING; if not,
 * write to the Free Software Foundation, Inc., 675 Mass Ave,
 * Cambridge, MA 02139, USA.
 *
 * To contact the author by email: eernst@cs.au.dk
 *
 * To contact the author by snail-mail:
 *    Erik Ernst
 *    Department of Computer Science
 *    University of Aarhus
 *    DK-8200 Aarhus N
 *    Denmark
 *)

ORIGIN '../ibetaOne';
INCLUDE '../ibetaSType';
INCLUDE 'ibetaCommonlib';
BODY 'ibetaOnelibbody'

-- InterpreterBaseLib:attributes --

pat2typ:
  (# l1pat: ^l1PatternEntity;
     l1typ: ^l1TypeEntity
  enter l1pat[]
  <<SLOT PatToTyp:dopart>>
  exit l1typ[]
  #)

-- IndexEntityLib:attributes --

step:
  (* Increase this index to the next value *)
  (# <<SLOT IndexEntityStep:dopart>> #)

-- ObjectRefEntityLib:attributes --

conforms: booleanValue
  (* Check that the given l1obj satisfies the type requirements
   * for being the (future) value of this object ref entity; note
   * that it will cause a runtime error to call this on an exact
   * object ref entity whose qualification includes constraints,
   * but it would be a bug in the 'check' methods if such a
   * situation arises so we just let it fail *)
  (# l1obj: ^l1ObjectEntity
  enter l1obj[]
  <<SLOT ObjectRefEntityConforms:dopart>>
  #)

-- PatternRefEntityLib:attributes --

conforms: booleanValue
  (* Check that the given l1pat satisfies the type requirements
   * for being the (future) value of this pattern ref entity; note
   * that it will cause a runtime error to call this on an exact
   * object ref entity whose qualification includes constraints,
   * but it would be a bug in the 'check' methods if such a
   * situation arises so we just let it fail *)
  (# l1pat: ^l1PatternEntity
  enter l1pat[]
  <<SLOT PatternRefEntityConforms:dopart>>
  #)

(*
 * local variables:
 * ee-beta-main-file: "/src/main/gbeta.bet"
 * end:
 *)
