(* FILE "./private/ibetaTransientlib.bet"
 *
 * Copyright (C) 1997-2011 Erik Ernst
 *
 * This file is part of "gbeta" -- a generalized version of the
 * programming language BETA.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is destributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Among other things, the copyright notice and this notice must be
 * preserved on all copies.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, probably in a file named COPYING; if not,
 * write to the Free Software Foundation, Inc., 675 Mass Ave,
 * Cambridge, MA 02139, USA.
 *
 * To contact the author by email: eernst@cs.au.dk
 *
 * To contact the author by snail-mail:
 *    Erik Ernst
 *    Department of Computer Science
 *    University of Aarhus
 *    DK-8200 Aarhus N
 *    Denmark
 *)

ORIGIN '../ibetaIter';
INCLUDE '../utils';
BODY 'ibetaTransientlibbody'

-- InterpreterBaseLib:attributes --

(************************************************************
 *                                                          *
 *             Compilation Special Case Support             *
 *                                                          *
 ************************************************************)

generateEnterOneValue:
  (* Standard solution to the problem of using an enterCompiler
   * correctly for the insertion of one value; further bind
   * 'EmptyInput' and 'MultipleInputs' to handle these error
   * conditions; returns the kind of value inserted *)
  (# <<SLOT GenerateEnterOneValueLib:attributes>>;
     EmptyInput:< exception;
     MultipleInputs:< exception;
     cplr: ^enterCompiler;
     program: ^betaByteCodeList;
     cInfo: ^compileInfo;
     stran: ^staticTransient
  enter (cplr[],program[],cInfo[])
  <<SLOT GenerateEnterOneValue:dopart>>
  exit stran[]
  #);

generateExitOneValue:
  (* Standard solution to the problem of using an exitCompiler
   * correctly for the extraction of one value; further bind
   * 'EmptyOutput' and 'MultipleOutputs' to handle these error
   * conditions; returns the kind of value extracted *)
  (# <<SLOT GenerateExitOneValueLib:attributes>>;
     EmptyOutput:< exception;
     MultipleOutputs:< exception;
     cplr: ^exitCompiler;
     program: ^betaByteCodeList;
     cInfo: ^compileInfo;
     stran: ^staticTransient
  enter (cplr[],program[],cInfo[])
  <<SLOT GenerateExitOneValue:dopart>>
  exit stran[]
  #)

(*
 * local variables:
 * ee-beta-main-file: "/src/main/gbeta.bet"
 * end:
 *)
