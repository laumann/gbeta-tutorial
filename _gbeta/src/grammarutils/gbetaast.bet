(* FILE "./grammarutils/gbetaast.bet"
 *
 * Copyright (C) 1997-2011 Erik Ernst
 *
 * This file is part of "gbeta" -- a generalized version of the
 * programming language BETA.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is destributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Among other things, the copyright notice and this notice must be
 * preserved on all copies.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, probably in a file named COPYING; if not,
 * write to the Free Software Foundation, Inc., 675 Mass Ave,
 * Cambridge, MA 02139, USA.
 *
 * To contact the author by email: eernst@cs.au.dk
 *
 * To contact the author by snail-mail:
 *    Erik Ernst
 *    Department of Computer Science
 *    University of Aarhus
 *    DK-8200 Aarhus N
 *    Denmark
 *)

ORIGIN '~beta/basiclib/basicsystemenv';
INCLUDE '~beta/sysutils/envstring';
INCLUDE '~beta/mps/astlevel';
INCLUDE '~beta/mps/findgrammar';
INCLUDE '../../grammars/gbeta/gbetacfl';
INCLUDE 'astutil';
BODY 'private/gbetaastbody';
MDBODY default 'gbetaast_unix' nti 'gbetaast_nt'

-- systemlib:attributes --

metaGrammarPath: (# path: ^text <<SLOT MetaGrammarPath:dopart>> exit path[] #);

gbetaGrammarPath:
  (# path: ^text
  do '$(GBETA_GGRAMMAR_PATH)'->expandEnvVar->path[]
  exit path[]
  #);

gbetaAstInterface: astInterface
  (# <<SLOT GBetaAstInterfaceLib:attributes>>;

     gbetaWithLib: gbeta
       (# <<SLOT GBetaTreeLevelLib:attributes>>;
          private: @<<SLOT GBetaTreeLevelPrivate:descriptor>>
       #);

     (* ---------- Operations ---------- *)

     init:< (# <<SLOT GBetaAstInterfaceInit:dopart>> #);

     open: (* open the fragment group with path 'path' and return it *)
       (# openError:< exception(# do failure->termCode; INNER #);
          path: ^text;
          gbetaGroup: ^fragmentGroup
       enter path[]
       <<SLOT GBetaAstInterfaceOpen:dopart>>
       exit gbetaGroup[]
       #);

     close: (* shutdown the given fragment group *)
       (# fg: ^fragmentgroup
       enter fg[]
       <<SLOT GBetaAstInterfaceShutdown:dopart>>
       #);

     (* ---------- Exceptions ---------- *)

     InitFileException:< exception; (* file error during initialization *)

     (* ---------- Grammars ---------- *)

     theGGrammar: @gbetaWithLib;

     (* ---------- Private ---------- *)

     private: @<<SLOT GBetaAstInterfacePrivate:descriptor>>

  do INNER
  #)

(*
 * local variables:
 * ee-beta-main-file: "/src/main/gbeta.bet"
 * end:
 *)
